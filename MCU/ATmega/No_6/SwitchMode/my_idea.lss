
my_idea.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000510  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000004b0  00000000  00000000  00000564  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000704  00000000  00000000  00000a14  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  70:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  74:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  7c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  80:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  84:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  88:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e1       	ldi	r30, 0x10	; 16
  a0:	f5 e0       	ldi	r31, 0x05	; 5
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	0e 94 5f 00 	call	0xbe	; 0xbe <main>
  b6:	0c 94 86 02 	jmp	0x50c	; 0x50c <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <main>:
// ***********************************************************

#include <avr/io.h>              // Most basic include files
#include <util/delay.h>

int main(void) {
  be:	df 93       	push	r29
  c0:	cf 93       	push	r28
  c2:	cd b7       	in	r28, 0x3d	; 61
  c4:	de b7       	in	r29, 0x3e	; 62
  c6:	6c 97       	sbiw	r28, 0x1c	; 28
  c8:	0f b6       	in	r0, 0x3f	; 63
  ca:	f8 94       	cli
  cc:	de bf       	out	0x3e, r29	; 62
  ce:	0f be       	out	0x3f, r0	; 63
  d0:	cd bf       	out	0x3d, r28	; 61
    DDRA = 0xFF;
  d2:	ea e3       	ldi	r30, 0x3A	; 58
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	8f ef       	ldi	r24, 0xFF	; 255
  d8:	80 83       	st	Z, r24
    DDRC = 0x00;
  da:	e4 e3       	ldi	r30, 0x34	; 52
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	10 82       	st	Z, r1
    PORTA = 0xFF;
  e0:	eb e3       	ldi	r30, 0x3B	; 59
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	8f ef       	ldi	r24, 0xFF	; 255
  e6:	80 83       	st	Z, r24
    PORTC = 0xFF;
  e8:	e5 e3       	ldi	r30, 0x35	; 53
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	8f ef       	ldi	r24, 0xFF	; 255
  ee:	80 83       	st	Z, r24

   while(1) {             // Infinite loop; define here the
        if ((PINC & 0xFE) == PINC) {
  f0:	e3 e3       	ldi	r30, 0x33	; 51
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	80 81       	ld	r24, Z
  f6:	88 2f       	mov	r24, r24
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	9c 01       	movw	r18, r24
  fc:	2e 7f       	andi	r18, 0xFE	; 254
  fe:	30 70       	andi	r19, 0x00	; 0
 100:	e3 e3       	ldi	r30, 0x33	; 51
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	88 2f       	mov	r24, r24
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	28 17       	cp	r18, r24
 10c:	39 07       	cpc	r19, r25
 10e:	09 f0       	breq	.+2      	; 0x112 <main+0x54>
 110:	ec c0       	rjmp	.+472    	; 0x2ea <main+0x22c>
            PORTA = 0x00;
 112:	eb e3       	ldi	r30, 0x3B	; 59
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	10 82       	st	Z, r1
 118:	80 e0       	ldi	r24, 0x00	; 0
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	a8 e4       	ldi	r26, 0x48	; 72
 11e:	b3 e4       	ldi	r27, 0x43	; 67
 120:	89 8f       	std	Y+25, r24	; 0x19
 122:	9a 8f       	std	Y+26, r25	; 0x1a
 124:	ab 8f       	std	Y+27, r26	; 0x1b
 126:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 128:	69 8d       	ldd	r22, Y+25	; 0x19
 12a:	7a 8d       	ldd	r23, Y+26	; 0x1a
 12c:	8b 8d       	ldd	r24, Y+27	; 0x1b
 12e:	9c 8d       	ldd	r25, Y+28	; 0x1c
 130:	20 e0       	ldi	r18, 0x00	; 0
 132:	30 e0       	ldi	r19, 0x00	; 0
 134:	4a e7       	ldi	r20, 0x7A	; 122
 136:	53 e4       	ldi	r21, 0x43	; 67
 138:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <__mulsf3>
 13c:	dc 01       	movw	r26, r24
 13e:	cb 01       	movw	r24, r22
 140:	8d 8b       	std	Y+21, r24	; 0x15
 142:	9e 8b       	std	Y+22, r25	; 0x16
 144:	af 8b       	std	Y+23, r26	; 0x17
 146:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
 148:	6d 89       	ldd	r22, Y+21	; 0x15
 14a:	7e 89       	ldd	r23, Y+22	; 0x16
 14c:	8f 89       	ldd	r24, Y+23	; 0x17
 14e:	98 8d       	ldd	r25, Y+24	; 0x18
 150:	20 e0       	ldi	r18, 0x00	; 0
 152:	30 e0       	ldi	r19, 0x00	; 0
 154:	40 e8       	ldi	r20, 0x80	; 128
 156:	5f e3       	ldi	r21, 0x3F	; 63
 158:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <__cmpsf2>
 15c:	88 23       	and	r24, r24
 15e:	2c f4       	brge	.+10     	; 0x16a <main+0xac>
		__ticks = 1;
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	9c 8b       	std	Y+20, r25	; 0x14
 166:	8b 8b       	std	Y+19, r24	; 0x13
 168:	3f c0       	rjmp	.+126    	; 0x1e8 <main+0x12a>
	else if (__tmp > 65535)
 16a:	6d 89       	ldd	r22, Y+21	; 0x15
 16c:	7e 89       	ldd	r23, Y+22	; 0x16
 16e:	8f 89       	ldd	r24, Y+23	; 0x17
 170:	98 8d       	ldd	r25, Y+24	; 0x18
 172:	20 e0       	ldi	r18, 0x00	; 0
 174:	3f ef       	ldi	r19, 0xFF	; 255
 176:	4f e7       	ldi	r20, 0x7F	; 127
 178:	57 e4       	ldi	r21, 0x47	; 71
 17a:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__gesf2>
 17e:	18 16       	cp	r1, r24
 180:	4c f5       	brge	.+82     	; 0x1d4 <main+0x116>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 182:	69 8d       	ldd	r22, Y+25	; 0x19
 184:	7a 8d       	ldd	r23, Y+26	; 0x1a
 186:	8b 8d       	ldd	r24, Y+27	; 0x1b
 188:	9c 8d       	ldd	r25, Y+28	; 0x1c
 18a:	20 e0       	ldi	r18, 0x00	; 0
 18c:	30 e0       	ldi	r19, 0x00	; 0
 18e:	40 e2       	ldi	r20, 0x20	; 32
 190:	51 e4       	ldi	r21, 0x41	; 65
 192:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <__mulsf3>
 196:	dc 01       	movw	r26, r24
 198:	cb 01       	movw	r24, r22
 19a:	bc 01       	movw	r22, r24
 19c:	cd 01       	movw	r24, r26
 19e:	0e 94 7e 01 	call	0x2fc	; 0x2fc <__fixunssfsi>
 1a2:	dc 01       	movw	r26, r24
 1a4:	cb 01       	movw	r24, r22
 1a6:	9c 8b       	std	Y+20, r25	; 0x14
 1a8:	8b 8b       	std	Y+19, r24	; 0x13
 1aa:	0f c0       	rjmp	.+30     	; 0x1ca <main+0x10c>
 1ac:	89 e1       	ldi	r24, 0x19	; 25
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	9a 8b       	std	Y+18, r25	; 0x12
 1b2:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 1b4:	89 89       	ldd	r24, Y+17	; 0x11
 1b6:	9a 89       	ldd	r25, Y+18	; 0x12
 1b8:	01 97       	sbiw	r24, 0x01	; 1
 1ba:	f1 f7       	brne	.-4      	; 0x1b8 <main+0xfa>
 1bc:	9a 8b       	std	Y+18, r25	; 0x12
 1be:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1c0:	8b 89       	ldd	r24, Y+19	; 0x13
 1c2:	9c 89       	ldd	r25, Y+20	; 0x14
 1c4:	01 97       	sbiw	r24, 0x01	; 1
 1c6:	9c 8b       	std	Y+20, r25	; 0x14
 1c8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1ca:	8b 89       	ldd	r24, Y+19	; 0x13
 1cc:	9c 89       	ldd	r25, Y+20	; 0x14
 1ce:	00 97       	sbiw	r24, 0x00	; 0
 1d0:	69 f7       	brne	.-38     	; 0x1ac <main+0xee>
 1d2:	14 c0       	rjmp	.+40     	; 0x1fc <main+0x13e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 1d4:	6d 89       	ldd	r22, Y+21	; 0x15
 1d6:	7e 89       	ldd	r23, Y+22	; 0x16
 1d8:	8f 89       	ldd	r24, Y+23	; 0x17
 1da:	98 8d       	ldd	r25, Y+24	; 0x18
 1dc:	0e 94 7e 01 	call	0x2fc	; 0x2fc <__fixunssfsi>
 1e0:	dc 01       	movw	r26, r24
 1e2:	cb 01       	movw	r24, r22
 1e4:	9c 8b       	std	Y+20, r25	; 0x14
 1e6:	8b 8b       	std	Y+19, r24	; 0x13
 1e8:	8b 89       	ldd	r24, Y+19	; 0x13
 1ea:	9c 89       	ldd	r25, Y+20	; 0x14
 1ec:	98 8b       	std	Y+16, r25	; 0x10
 1ee:	8f 87       	std	Y+15, r24	; 0x0f
 1f0:	8f 85       	ldd	r24, Y+15	; 0x0f
 1f2:	98 89       	ldd	r25, Y+16	; 0x10
 1f4:	01 97       	sbiw	r24, 0x01	; 1
 1f6:	f1 f7       	brne	.-4      	; 0x1f4 <main+0x136>
 1f8:	98 8b       	std	Y+16, r25	; 0x10
 1fa:	8f 87       	std	Y+15, r24	; 0x0f
            _delay_ms(200);
            PORTA = 0xFF;
 1fc:	eb e3       	ldi	r30, 0x3B	; 59
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	8f ef       	ldi	r24, 0xFF	; 255
 202:	80 83       	st	Z, r24
 204:	80 e0       	ldi	r24, 0x00	; 0
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	a8 e4       	ldi	r26, 0x48	; 72
 20a:	b3 e4       	ldi	r27, 0x43	; 67
 20c:	8b 87       	std	Y+11, r24	; 0x0b
 20e:	9c 87       	std	Y+12, r25	; 0x0c
 210:	ad 87       	std	Y+13, r26	; 0x0d
 212:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 214:	6b 85       	ldd	r22, Y+11	; 0x0b
 216:	7c 85       	ldd	r23, Y+12	; 0x0c
 218:	8d 85       	ldd	r24, Y+13	; 0x0d
 21a:	9e 85       	ldd	r25, Y+14	; 0x0e
 21c:	20 e0       	ldi	r18, 0x00	; 0
 21e:	30 e0       	ldi	r19, 0x00	; 0
 220:	4a e7       	ldi	r20, 0x7A	; 122
 222:	53 e4       	ldi	r21, 0x43	; 67
 224:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <__mulsf3>
 228:	dc 01       	movw	r26, r24
 22a:	cb 01       	movw	r24, r22
 22c:	8f 83       	std	Y+7, r24	; 0x07
 22e:	98 87       	std	Y+8, r25	; 0x08
 230:	a9 87       	std	Y+9, r26	; 0x09
 232:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 234:	6f 81       	ldd	r22, Y+7	; 0x07
 236:	78 85       	ldd	r23, Y+8	; 0x08
 238:	89 85       	ldd	r24, Y+9	; 0x09
 23a:	9a 85       	ldd	r25, Y+10	; 0x0a
 23c:	20 e0       	ldi	r18, 0x00	; 0
 23e:	30 e0       	ldi	r19, 0x00	; 0
 240:	40 e8       	ldi	r20, 0x80	; 128
 242:	5f e3       	ldi	r21, 0x3F	; 63
 244:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <__cmpsf2>
 248:	88 23       	and	r24, r24
 24a:	2c f4       	brge	.+10     	; 0x256 <main+0x198>
		__ticks = 1;
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	9e 83       	std	Y+6, r25	; 0x06
 252:	8d 83       	std	Y+5, r24	; 0x05
 254:	3f c0       	rjmp	.+126    	; 0x2d4 <main+0x216>
	else if (__tmp > 65535)
 256:	6f 81       	ldd	r22, Y+7	; 0x07
 258:	78 85       	ldd	r23, Y+8	; 0x08
 25a:	89 85       	ldd	r24, Y+9	; 0x09
 25c:	9a 85       	ldd	r25, Y+10	; 0x0a
 25e:	20 e0       	ldi	r18, 0x00	; 0
 260:	3f ef       	ldi	r19, 0xFF	; 255
 262:	4f e7       	ldi	r20, 0x7F	; 127
 264:	57 e4       	ldi	r21, 0x47	; 71
 266:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__gesf2>
 26a:	18 16       	cp	r1, r24
 26c:	4c f5       	brge	.+82     	; 0x2c0 <main+0x202>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 26e:	6b 85       	ldd	r22, Y+11	; 0x0b
 270:	7c 85       	ldd	r23, Y+12	; 0x0c
 272:	8d 85       	ldd	r24, Y+13	; 0x0d
 274:	9e 85       	ldd	r25, Y+14	; 0x0e
 276:	20 e0       	ldi	r18, 0x00	; 0
 278:	30 e0       	ldi	r19, 0x00	; 0
 27a:	40 e2       	ldi	r20, 0x20	; 32
 27c:	51 e4       	ldi	r21, 0x41	; 65
 27e:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <__mulsf3>
 282:	dc 01       	movw	r26, r24
 284:	cb 01       	movw	r24, r22
 286:	bc 01       	movw	r22, r24
 288:	cd 01       	movw	r24, r26
 28a:	0e 94 7e 01 	call	0x2fc	; 0x2fc <__fixunssfsi>
 28e:	dc 01       	movw	r26, r24
 290:	cb 01       	movw	r24, r22
 292:	9e 83       	std	Y+6, r25	; 0x06
 294:	8d 83       	std	Y+5, r24	; 0x05
 296:	0f c0       	rjmp	.+30     	; 0x2b6 <main+0x1f8>
 298:	89 e1       	ldi	r24, 0x19	; 25
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	9c 83       	std	Y+4, r25	; 0x04
 29e:	8b 83       	std	Y+3, r24	; 0x03
 2a0:	8b 81       	ldd	r24, Y+3	; 0x03
 2a2:	9c 81       	ldd	r25, Y+4	; 0x04
 2a4:	01 97       	sbiw	r24, 0x01	; 1
 2a6:	f1 f7       	brne	.-4      	; 0x2a4 <main+0x1e6>
 2a8:	9c 83       	std	Y+4, r25	; 0x04
 2aa:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2ac:	8d 81       	ldd	r24, Y+5	; 0x05
 2ae:	9e 81       	ldd	r25, Y+6	; 0x06
 2b0:	01 97       	sbiw	r24, 0x01	; 1
 2b2:	9e 83       	std	Y+6, r25	; 0x06
 2b4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2b6:	8d 81       	ldd	r24, Y+5	; 0x05
 2b8:	9e 81       	ldd	r25, Y+6	; 0x06
 2ba:	00 97       	sbiw	r24, 0x00	; 0
 2bc:	69 f7       	brne	.-38     	; 0x298 <main+0x1da>
 2be:	18 cf       	rjmp	.-464    	; 0xf0 <main+0x32>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 2c0:	6f 81       	ldd	r22, Y+7	; 0x07
 2c2:	78 85       	ldd	r23, Y+8	; 0x08
 2c4:	89 85       	ldd	r24, Y+9	; 0x09
 2c6:	9a 85       	ldd	r25, Y+10	; 0x0a
 2c8:	0e 94 7e 01 	call	0x2fc	; 0x2fc <__fixunssfsi>
 2cc:	dc 01       	movw	r26, r24
 2ce:	cb 01       	movw	r24, r22
 2d0:	9e 83       	std	Y+6, r25	; 0x06
 2d2:	8d 83       	std	Y+5, r24	; 0x05
 2d4:	8d 81       	ldd	r24, Y+5	; 0x05
 2d6:	9e 81       	ldd	r25, Y+6	; 0x06
 2d8:	9a 83       	std	Y+2, r25	; 0x02
 2da:	89 83       	std	Y+1, r24	; 0x01
 2dc:	89 81       	ldd	r24, Y+1	; 0x01
 2de:	9a 81       	ldd	r25, Y+2	; 0x02
 2e0:	01 97       	sbiw	r24, 0x01	; 1
 2e2:	f1 f7       	brne	.-4      	; 0x2e0 <main+0x222>
 2e4:	9a 83       	std	Y+2, r25	; 0x02
 2e6:	89 83       	std	Y+1, r24	; 0x01
 2e8:	03 cf       	rjmp	.-506    	; 0xf0 <main+0x32>
            _delay_ms(200);
        } else {
            PORTA = 0xFF;
 2ea:	eb e3       	ldi	r30, 0x3B	; 59
 2ec:	f0 e0       	ldi	r31, 0x00	; 0
 2ee:	8f ef       	ldi	r24, 0xFF	; 255
 2f0:	80 83       	st	Z, r24
 2f2:	fe ce       	rjmp	.-516    	; 0xf0 <main+0x32>

000002f4 <__cmpsf2>:
 2f4:	2f d0       	rcall	.+94     	; 0x354 <__fp_cmp>
 2f6:	08 f4       	brcc	.+2      	; 0x2fa <__cmpsf2+0x6>
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	08 95       	ret

000002fc <__fixunssfsi>:
 2fc:	57 d0       	rcall	.+174    	; 0x3ac <__fp_splitA>
 2fe:	88 f0       	brcs	.+34     	; 0x322 <__fixunssfsi+0x26>
 300:	9f 57       	subi	r25, 0x7F	; 127
 302:	90 f0       	brcs	.+36     	; 0x328 <__fixunssfsi+0x2c>
 304:	b9 2f       	mov	r27, r25
 306:	99 27       	eor	r25, r25
 308:	b7 51       	subi	r27, 0x17	; 23
 30a:	a0 f0       	brcs	.+40     	; 0x334 <__fixunssfsi+0x38>
 30c:	d1 f0       	breq	.+52     	; 0x342 <__fixunssfsi+0x46>
 30e:	66 0f       	add	r22, r22
 310:	77 1f       	adc	r23, r23
 312:	88 1f       	adc	r24, r24
 314:	99 1f       	adc	r25, r25
 316:	1a f0       	brmi	.+6      	; 0x31e <__fixunssfsi+0x22>
 318:	ba 95       	dec	r27
 31a:	c9 f7       	brne	.-14     	; 0x30e <__fixunssfsi+0x12>
 31c:	12 c0       	rjmp	.+36     	; 0x342 <__fixunssfsi+0x46>
 31e:	b1 30       	cpi	r27, 0x01	; 1
 320:	81 f0       	breq	.+32     	; 0x342 <__fixunssfsi+0x46>
 322:	5e d0       	rcall	.+188    	; 0x3e0 <__fp_zero>
 324:	b1 e0       	ldi	r27, 0x01	; 1
 326:	08 95       	ret
 328:	5b c0       	rjmp	.+182    	; 0x3e0 <__fp_zero>
 32a:	67 2f       	mov	r22, r23
 32c:	78 2f       	mov	r23, r24
 32e:	88 27       	eor	r24, r24
 330:	b8 5f       	subi	r27, 0xF8	; 248
 332:	39 f0       	breq	.+14     	; 0x342 <__fixunssfsi+0x46>
 334:	b9 3f       	cpi	r27, 0xF9	; 249
 336:	cc f3       	brlt	.-14     	; 0x32a <__fixunssfsi+0x2e>
 338:	86 95       	lsr	r24
 33a:	77 95       	ror	r23
 33c:	67 95       	ror	r22
 33e:	b3 95       	inc	r27
 340:	d9 f7       	brne	.-10     	; 0x338 <__fixunssfsi+0x3c>
 342:	3e f4       	brtc	.+14     	; 0x352 <__fixunssfsi+0x56>
 344:	90 95       	com	r25
 346:	80 95       	com	r24
 348:	70 95       	com	r23
 34a:	61 95       	neg	r22
 34c:	7f 4f       	sbci	r23, 0xFF	; 255
 34e:	8f 4f       	sbci	r24, 0xFF	; 255
 350:	9f 4f       	sbci	r25, 0xFF	; 255
 352:	08 95       	ret

00000354 <__fp_cmp>:
 354:	99 0f       	add	r25, r25
 356:	00 08       	sbc	r0, r0
 358:	55 0f       	add	r21, r21
 35a:	aa 0b       	sbc	r26, r26
 35c:	e0 e8       	ldi	r30, 0x80	; 128
 35e:	fe ef       	ldi	r31, 0xFE	; 254
 360:	16 16       	cp	r1, r22
 362:	17 06       	cpc	r1, r23
 364:	e8 07       	cpc	r30, r24
 366:	f9 07       	cpc	r31, r25
 368:	c0 f0       	brcs	.+48     	; 0x39a <__fp_cmp+0x46>
 36a:	12 16       	cp	r1, r18
 36c:	13 06       	cpc	r1, r19
 36e:	e4 07       	cpc	r30, r20
 370:	f5 07       	cpc	r31, r21
 372:	98 f0       	brcs	.+38     	; 0x39a <__fp_cmp+0x46>
 374:	62 1b       	sub	r22, r18
 376:	73 0b       	sbc	r23, r19
 378:	84 0b       	sbc	r24, r20
 37a:	95 0b       	sbc	r25, r21
 37c:	39 f4       	brne	.+14     	; 0x38c <__fp_cmp+0x38>
 37e:	0a 26       	eor	r0, r26
 380:	61 f0       	breq	.+24     	; 0x39a <__fp_cmp+0x46>
 382:	23 2b       	or	r18, r19
 384:	24 2b       	or	r18, r20
 386:	25 2b       	or	r18, r21
 388:	21 f4       	brne	.+8      	; 0x392 <__fp_cmp+0x3e>
 38a:	08 95       	ret
 38c:	0a 26       	eor	r0, r26
 38e:	09 f4       	brne	.+2      	; 0x392 <__fp_cmp+0x3e>
 390:	a1 40       	sbci	r26, 0x01	; 1
 392:	a6 95       	lsr	r26
 394:	8f ef       	ldi	r24, 0xFF	; 255
 396:	81 1d       	adc	r24, r1
 398:	81 1d       	adc	r24, r1
 39a:	08 95       	ret

0000039c <__fp_split3>:
 39c:	57 fd       	sbrc	r21, 7
 39e:	90 58       	subi	r25, 0x80	; 128
 3a0:	44 0f       	add	r20, r20
 3a2:	55 1f       	adc	r21, r21
 3a4:	59 f0       	breq	.+22     	; 0x3bc <__fp_splitA+0x10>
 3a6:	5f 3f       	cpi	r21, 0xFF	; 255
 3a8:	71 f0       	breq	.+28     	; 0x3c6 <__fp_splitA+0x1a>
 3aa:	47 95       	ror	r20

000003ac <__fp_splitA>:
 3ac:	88 0f       	add	r24, r24
 3ae:	97 fb       	bst	r25, 7
 3b0:	99 1f       	adc	r25, r25
 3b2:	61 f0       	breq	.+24     	; 0x3cc <__fp_splitA+0x20>
 3b4:	9f 3f       	cpi	r25, 0xFF	; 255
 3b6:	79 f0       	breq	.+30     	; 0x3d6 <__fp_splitA+0x2a>
 3b8:	87 95       	ror	r24
 3ba:	08 95       	ret
 3bc:	12 16       	cp	r1, r18
 3be:	13 06       	cpc	r1, r19
 3c0:	14 06       	cpc	r1, r20
 3c2:	55 1f       	adc	r21, r21
 3c4:	f2 cf       	rjmp	.-28     	; 0x3aa <__fp_split3+0xe>
 3c6:	46 95       	lsr	r20
 3c8:	f1 df       	rcall	.-30     	; 0x3ac <__fp_splitA>
 3ca:	08 c0       	rjmp	.+16     	; 0x3dc <__fp_splitA+0x30>
 3cc:	16 16       	cp	r1, r22
 3ce:	17 06       	cpc	r1, r23
 3d0:	18 06       	cpc	r1, r24
 3d2:	99 1f       	adc	r25, r25
 3d4:	f1 cf       	rjmp	.-30     	; 0x3b8 <__fp_splitA+0xc>
 3d6:	86 95       	lsr	r24
 3d8:	71 05       	cpc	r23, r1
 3da:	61 05       	cpc	r22, r1
 3dc:	08 94       	sec
 3de:	08 95       	ret

000003e0 <__fp_zero>:
 3e0:	e8 94       	clt

000003e2 <__fp_szero>:
 3e2:	bb 27       	eor	r27, r27
 3e4:	66 27       	eor	r22, r22
 3e6:	77 27       	eor	r23, r23
 3e8:	cb 01       	movw	r24, r22
 3ea:	97 f9       	bld	r25, 7
 3ec:	08 95       	ret

000003ee <__gesf2>:
 3ee:	b2 df       	rcall	.-156    	; 0x354 <__fp_cmp>
 3f0:	08 f4       	brcc	.+2      	; 0x3f4 <__gesf2+0x6>
 3f2:	8f ef       	ldi	r24, 0xFF	; 255
 3f4:	08 95       	ret

000003f6 <__mulsf3>:
 3f6:	0b d0       	rcall	.+22     	; 0x40e <__mulsf3x>
 3f8:	78 c0       	rjmp	.+240    	; 0x4ea <__fp_round>
 3fa:	69 d0       	rcall	.+210    	; 0x4ce <__fp_pscA>
 3fc:	28 f0       	brcs	.+10     	; 0x408 <__mulsf3+0x12>
 3fe:	6e d0       	rcall	.+220    	; 0x4dc <__fp_pscB>
 400:	18 f0       	brcs	.+6      	; 0x408 <__mulsf3+0x12>
 402:	95 23       	and	r25, r21
 404:	09 f0       	breq	.+2      	; 0x408 <__mulsf3+0x12>
 406:	5a c0       	rjmp	.+180    	; 0x4bc <__fp_inf>
 408:	5f c0       	rjmp	.+190    	; 0x4c8 <__fp_nan>
 40a:	11 24       	eor	r1, r1
 40c:	ea cf       	rjmp	.-44     	; 0x3e2 <__fp_szero>

0000040e <__mulsf3x>:
 40e:	c6 df       	rcall	.-116    	; 0x39c <__fp_split3>
 410:	a0 f3       	brcs	.-24     	; 0x3fa <__mulsf3+0x4>

00000412 <__mulsf3_pse>:
 412:	95 9f       	mul	r25, r21
 414:	d1 f3       	breq	.-12     	; 0x40a <__mulsf3+0x14>
 416:	95 0f       	add	r25, r21
 418:	50 e0       	ldi	r21, 0x00	; 0
 41a:	55 1f       	adc	r21, r21
 41c:	62 9f       	mul	r22, r18
 41e:	f0 01       	movw	r30, r0
 420:	72 9f       	mul	r23, r18
 422:	bb 27       	eor	r27, r27
 424:	f0 0d       	add	r31, r0
 426:	b1 1d       	adc	r27, r1
 428:	63 9f       	mul	r22, r19
 42a:	aa 27       	eor	r26, r26
 42c:	f0 0d       	add	r31, r0
 42e:	b1 1d       	adc	r27, r1
 430:	aa 1f       	adc	r26, r26
 432:	64 9f       	mul	r22, r20
 434:	66 27       	eor	r22, r22
 436:	b0 0d       	add	r27, r0
 438:	a1 1d       	adc	r26, r1
 43a:	66 1f       	adc	r22, r22
 43c:	82 9f       	mul	r24, r18
 43e:	22 27       	eor	r18, r18
 440:	b0 0d       	add	r27, r0
 442:	a1 1d       	adc	r26, r1
 444:	62 1f       	adc	r22, r18
 446:	73 9f       	mul	r23, r19
 448:	b0 0d       	add	r27, r0
 44a:	a1 1d       	adc	r26, r1
 44c:	62 1f       	adc	r22, r18
 44e:	83 9f       	mul	r24, r19
 450:	a0 0d       	add	r26, r0
 452:	61 1d       	adc	r22, r1
 454:	22 1f       	adc	r18, r18
 456:	74 9f       	mul	r23, r20
 458:	33 27       	eor	r19, r19
 45a:	a0 0d       	add	r26, r0
 45c:	61 1d       	adc	r22, r1
 45e:	23 1f       	adc	r18, r19
 460:	84 9f       	mul	r24, r20
 462:	60 0d       	add	r22, r0
 464:	21 1d       	adc	r18, r1
 466:	82 2f       	mov	r24, r18
 468:	76 2f       	mov	r23, r22
 46a:	6a 2f       	mov	r22, r26
 46c:	11 24       	eor	r1, r1
 46e:	9f 57       	subi	r25, 0x7F	; 127
 470:	50 40       	sbci	r21, 0x00	; 0
 472:	8a f0       	brmi	.+34     	; 0x496 <__mulsf3_pse+0x84>
 474:	e1 f0       	breq	.+56     	; 0x4ae <__mulsf3_pse+0x9c>
 476:	88 23       	and	r24, r24
 478:	4a f0       	brmi	.+18     	; 0x48c <__mulsf3_pse+0x7a>
 47a:	ee 0f       	add	r30, r30
 47c:	ff 1f       	adc	r31, r31
 47e:	bb 1f       	adc	r27, r27
 480:	66 1f       	adc	r22, r22
 482:	77 1f       	adc	r23, r23
 484:	88 1f       	adc	r24, r24
 486:	91 50       	subi	r25, 0x01	; 1
 488:	50 40       	sbci	r21, 0x00	; 0
 48a:	a9 f7       	brne	.-22     	; 0x476 <__mulsf3_pse+0x64>
 48c:	9e 3f       	cpi	r25, 0xFE	; 254
 48e:	51 05       	cpc	r21, r1
 490:	70 f0       	brcs	.+28     	; 0x4ae <__mulsf3_pse+0x9c>
 492:	14 c0       	rjmp	.+40     	; 0x4bc <__fp_inf>
 494:	a6 cf       	rjmp	.-180    	; 0x3e2 <__fp_szero>
 496:	5f 3f       	cpi	r21, 0xFF	; 255
 498:	ec f3       	brlt	.-6      	; 0x494 <__mulsf3_pse+0x82>
 49a:	98 3e       	cpi	r25, 0xE8	; 232
 49c:	dc f3       	brlt	.-10     	; 0x494 <__mulsf3_pse+0x82>
 49e:	86 95       	lsr	r24
 4a0:	77 95       	ror	r23
 4a2:	67 95       	ror	r22
 4a4:	b7 95       	ror	r27
 4a6:	f7 95       	ror	r31
 4a8:	e7 95       	ror	r30
 4aa:	9f 5f       	subi	r25, 0xFF	; 255
 4ac:	c1 f7       	brne	.-16     	; 0x49e <__mulsf3_pse+0x8c>
 4ae:	fe 2b       	or	r31, r30
 4b0:	88 0f       	add	r24, r24
 4b2:	91 1d       	adc	r25, r1
 4b4:	96 95       	lsr	r25
 4b6:	87 95       	ror	r24
 4b8:	97 f9       	bld	r25, 7
 4ba:	08 95       	ret

000004bc <__fp_inf>:
 4bc:	97 f9       	bld	r25, 7
 4be:	9f 67       	ori	r25, 0x7F	; 127
 4c0:	80 e8       	ldi	r24, 0x80	; 128
 4c2:	70 e0       	ldi	r23, 0x00	; 0
 4c4:	60 e0       	ldi	r22, 0x00	; 0
 4c6:	08 95       	ret

000004c8 <__fp_nan>:
 4c8:	9f ef       	ldi	r25, 0xFF	; 255
 4ca:	80 ec       	ldi	r24, 0xC0	; 192
 4cc:	08 95       	ret

000004ce <__fp_pscA>:
 4ce:	00 24       	eor	r0, r0
 4d0:	0a 94       	dec	r0
 4d2:	16 16       	cp	r1, r22
 4d4:	17 06       	cpc	r1, r23
 4d6:	18 06       	cpc	r1, r24
 4d8:	09 06       	cpc	r0, r25
 4da:	08 95       	ret

000004dc <__fp_pscB>:
 4dc:	00 24       	eor	r0, r0
 4de:	0a 94       	dec	r0
 4e0:	12 16       	cp	r1, r18
 4e2:	13 06       	cpc	r1, r19
 4e4:	14 06       	cpc	r1, r20
 4e6:	05 06       	cpc	r0, r21
 4e8:	08 95       	ret

000004ea <__fp_round>:
 4ea:	09 2e       	mov	r0, r25
 4ec:	03 94       	inc	r0
 4ee:	00 0c       	add	r0, r0
 4f0:	11 f4       	brne	.+4      	; 0x4f6 <__fp_round+0xc>
 4f2:	88 23       	and	r24, r24
 4f4:	52 f0       	brmi	.+20     	; 0x50a <__fp_round+0x20>
 4f6:	bb 0f       	add	r27, r27
 4f8:	40 f4       	brcc	.+16     	; 0x50a <__fp_round+0x20>
 4fa:	bf 2b       	or	r27, r31
 4fc:	11 f4       	brne	.+4      	; 0x502 <__fp_round+0x18>
 4fe:	60 ff       	sbrs	r22, 0
 500:	04 c0       	rjmp	.+8      	; 0x50a <__fp_round+0x20>
 502:	6f 5f       	subi	r22, 0xFF	; 255
 504:	7f 4f       	sbci	r23, 0xFF	; 255
 506:	8f 4f       	sbci	r24, 0xFF	; 255
 508:	9f 4f       	sbci	r25, 0xFF	; 255
 50a:	08 95       	ret

0000050c <_exit>:
 50c:	f8 94       	cli

0000050e <__stop_program>:
 50e:	ff cf       	rjmp	.-2      	; 0x50e <__stop_program>
